INFO: Seed: 1460648770
INFO: Loaded 0 modules (0 guards): 
Loading corpus dir: /samples/
Loaded 1024/1257 files from /samples/
#0	READ units: 1257
#1257	INITED cov: 1307 bits: 7436 indir: 7 corp: 627/535Kb exec/s: 1257 rss: 101Mb
=================================================================
==16194==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6190005af941 at pc 0x7facef22c5e1 bp 0x7fffe161e350 sp 0x7fffe161e348
READ of size 1 at 0x6190005af941 thread T0
    #0 0x7facef22c5e0 in mad_bit_read (/usr/lib/libmad.so.0+0x75e0)
    #1 0x7facef255bc3 in II_samples (/usr/lib/libmad.so.0+0x30bc3)
    #2 0x7facef254307 in mad_layer_II (/usr/lib/libmad.so.0+0x2f307)
    #3 0x7facef23b6c4 in mad_frame_decode (/usr/lib/libmad.so.0+0x166c4)
    #4 0x7facef249e4b in run_sync (/usr/lib/libmad.so.0+0x24e4b)
    #5 0x7facef248a9e in mad_decoder_run (/usr/lib/libmad.so.0+0x23a9e)
    #6 0x50e2bd in LLVMFuzzerTestOneInput (/src/libmad-0.15.1b/libmad-fuzzer+0x50e2bd)
    #7 0x4f85f4 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:536:13
    #8 0x4f87e4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:488:3
    #9 0x4f98ce in fuzzer::Fuzzer::MutateAndTestOne() /src/Fuzzer/FuzzerLoop.cpp:722:30
    #10 0x4f9ae7 in fuzzer::Fuzzer::Loop() /src/Fuzzer/FuzzerLoop.cpp:755:5
    #11 0x4f1ca4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/Fuzzer/FuzzerDriver.cpp:530:3
    #12 0x4ef6f0 in main /src/Fuzzer/FuzzerMain.cpp:20:10
    #13 0x7facedfb282f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x41b258 in _start (/src/libmad-0.15.1b/libmad-fuzzer+0x41b258)

0x6190005af941 is located 0 bytes to the right of 961-byte region [0x6190005af580,0x6190005af941)
allocated by thread T0 here:
    #0 0x4ecad0 in operator new[](unsigned long) (/src/libmad-0.15.1b/libmad-fuzzer+0x4ecad0)
    #1 0x4f8537 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:527:23

SUMMARY: AddressSanitizer: heap-buffer-overflow (/usr/lib/libmad.so.0+0x75e0) in mad_bit_read
Shadow bytes around the buggy address:
  0x0c32800aded0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800adee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800adef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800adf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800adf10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c32800adf20: 00 00 00 00 00 00 00 00[01]fa fa fa fa fa fa fa
  0x0c32800adf30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c32800adf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c32800adf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800adf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800adf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==16194==ABORTING
MS: 4 CrossOver-ChangeASCIIInt-EraseBytes-CopyPart-; base unit: c5c9afad4fa6b16695fc3a42dafd1098cee05f73
artifact_prefix='./'; Test unit written to /dev/shm/repro-file
