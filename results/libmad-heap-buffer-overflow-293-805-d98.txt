INFO: Seed: 2877133991
INFO: Loaded 0 modules (0 guards): 
Loading corpus dir: /samples/
Loaded 1024/1244 files from /samples/
#0	READ units: 1244
#1024	pulse  cov: 1267 bits: 7135 indir: 7 corp: 583/482Kb exec/s: 512 rss: 89Mb
#1244	INITED cov: 1296 bits: 7296 indir: 7 corp: 633/531Kb exec/s: 622 rss: 100Mb
=================================================================
==18599==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x618000097fb2 at pc 0x7ff7b3370d99 bp 0x7ffdd61d8650 sp 0x7ffdd61d8648
READ of size 1 at 0x618000097fb2 thread T0
    #0 0x7ff7b3370d98 in mad_bit_read (/usr/lib/libmad.so.0+0x7d98)
    #1 0x7ff7b33a4805 in III_scalefactors (/usr/lib/libmad.so.0+0x3b805)
    #2 0x7ff7b33a0293 in III_decode (/usr/lib/libmad.so.0+0x37293)
    #3 0x7ff7b339c80f in mad_layer_III (/usr/lib/libmad.so.0+0x3380f)
    #4 0x7ff7b337f6c4 in mad_frame_decode (/usr/lib/libmad.so.0+0x166c4)
    #5 0x7ff7b338de4b in run_sync (/usr/lib/libmad.so.0+0x24e4b)
    #6 0x7ff7b338ca9e in mad_decoder_run (/usr/lib/libmad.so.0+0x23a9e)
    #7 0x50e2bd in LLVMFuzzerTestOneInput (/src/libmad-0.15.1b/libmad-fuzzer+0x50e2bd)
    #8 0x4f85f4 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:536:13
    #9 0x4f87e4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:488:3
    #10 0x4f98ce in fuzzer::Fuzzer::MutateAndTestOne() /src/Fuzzer/FuzzerLoop.cpp:722:30
    #11 0x4f9ae7 in fuzzer::Fuzzer::Loop() /src/Fuzzer/FuzzerLoop.cpp:755:5
    #12 0x4f1ca4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/Fuzzer/FuzzerDriver.cpp:530:3
    #13 0x4ef6f0 in main /src/Fuzzer/FuzzerMain.cpp:20:10
    #14 0x7ff7b20f682f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #15 0x41b258 in _start (/src/libmad-0.15.1b/libmad-fuzzer+0x41b258)

0x618000097fb2 is located 0 bytes to the right of 818-byte region [0x618000097c80,0x618000097fb2)
allocated by thread T0 here:
    #0 0x4ecad0 in operator new[](unsigned long) (/src/libmad-0.15.1b/libmad-fuzzer+0x4ecad0)
    #1 0x4f8537 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:527:23

SUMMARY: AddressSanitizer: heap-buffer-overflow (/usr/lib/libmad.so.0+0x7d98) in mad_bit_read
Shadow bytes around the buggy address:
  0x0c308000afa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c308000afb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c308000afc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c308000afd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c308000afe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c308000aff0: 00 00 00 00 00 00[02]fa fa fa fa fa fa fa fa fa
  0x0c308000b000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c308000b010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c308000b020: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c308000b030: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c308000b040: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18599==ABORTING
MS: 4 ChangeBinInt-ShuffleBytes-EraseBytes-CrossOver-; base unit: 792c3ee8b04e1d316ac6eb6050df697162ff87cf
artifact_prefix='./'; Test unit written to /dev/shm/repro-file
