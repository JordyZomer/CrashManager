INFO: Seed: 3793104386
INFO: Loaded 0 modules (0 guards): 
Loading corpus dir: /samples/
Loaded 1024/1244 files from /samples/
#0	READ units: 1244
#1024	pulse  cov: 1268 bits: 7119 indir: 7 corp: 577/477Kb exec/s: 341 rss: 88Mb
#1244	INITED cov: 1296 bits: 7296 indir: 7 corp: 642/540Kb exec/s: 414 rss: 100Mb
=================================================================
==11778==ERROR: AddressSanitizer: heap-use-after-free on address 0x61900055b9ac at pc 0x7fb748d725e1 bp 0x7ffd5bd7add0 sp 0x7ffd5bd7adc8
READ of size 1 at 0x61900055b9ac thread T0
    #0 0x7fb748d725e0 in mad_bit_read (/usr/lib/libmad.so.0+0x75e0)
    #1 0x7fb748da5e6d in III_scalefactors_lsf (/usr/lib/libmad.so.0+0x3ae6d)
    #2 0x7fb748da20a8 in III_decode (/usr/lib/libmad.so.0+0x370a8)
    #3 0x7fb748d9e80f in mad_layer_III (/usr/lib/libmad.so.0+0x3380f)
    #4 0x7fb748d816c4 in mad_frame_decode (/usr/lib/libmad.so.0+0x166c4)
    #5 0x7fb748d8fe4b in run_sync (/usr/lib/libmad.so.0+0x24e4b)
    #6 0x7fb748d8ea9e in mad_decoder_run (/usr/lib/libmad.so.0+0x23a9e)
    #7 0x50e2bd in LLVMFuzzerTestOneInput (/src/libmad-0.15.1b/libmad-fuzzer+0x50e2bd)
    #8 0x4f85f4 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:536:13
    #9 0x4f87e4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:488:3
    #10 0x4f98ce in fuzzer::Fuzzer::MutateAndTestOne() /src/Fuzzer/FuzzerLoop.cpp:722:30
    #11 0x4f9ae7 in fuzzer::Fuzzer::Loop() /src/Fuzzer/FuzzerLoop.cpp:755:5
    #12 0x4f1ca4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/Fuzzer/FuzzerDriver.cpp:530:3
    #13 0x4ef6f0 in main /src/Fuzzer/FuzzerMain.cpp:20:10
    #14 0x7fb747af882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #15 0x41b258 in _start (/src/libmad-0.15.1b/libmad-fuzzer+0x41b258)

0x61900055b9ac is located 44 bytes inside of 1000-byte region [0x61900055b980,0x61900055bd68)
freed by thread T0 here:
    #0 0x4ed0d0 in operator delete[](void*) (/src/libmad-0.15.1b/libmad-fuzzer+0x4ed0d0)
    #1 0x4f87e4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:488:3

previously allocated by thread T0 here:
    #0 0x4ecad0 in operator new[](unsigned long) (/src/libmad-0.15.1b/libmad-fuzzer+0x4ecad0)
    #1 0x4f8537 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:527:23

SUMMARY: AddressSanitizer: heap-use-after-free (/usr/lib/libmad.so.0+0x75e0) in mad_bit_read
Shadow bytes around the buggy address:
  0x0c32800a36e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800a36f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c32800a3700: 00 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa
  0x0c32800a3710: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c32800a3720: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c32800a3730: fd fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd
  0x0c32800a3740: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800a3750: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800a3760: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800a3770: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c32800a3780: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==11778==ABORTING
MS: 4 CopyPart-CMP-InsertRepeatedBytes-ChangeByte- DE: "\x00\x00\x00\x