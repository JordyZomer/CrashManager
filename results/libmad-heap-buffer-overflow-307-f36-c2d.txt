INFO: Seed: 2364826224
INFO: Loaded 0 modules (0 guards): 
Loading corpus dir: /samples/
Loaded 1024/1257 files from /samples/
#0	READ units: 1257
#512	pulse  cov: 1301 bits: 6579 indir: 7 corp: 377/291Kb exec/s: 256 rss: 62Mb
#1024	pulse  cov: 1307 bits: 7338 indir: 7 corp: 582/491Kb exec/s: 256 rss: 90Mb
#1257	INITED cov: 1307 bits: 7436 indir: 7 corp: 632/540Kb exec/s: 314 rss: 101Mb
=================================================================
==15984==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x616000199483 at pc 0x7f69b63c1c2e bp 0x7fffb99de2f0 sp 0x7fffb99de2e8
READ of size 1 at 0x616000199483 thread T0
    #0 0x7f69b63c1c2d in mad_bit_read (/usr/lib/libmad.so.0+0x7c2d)
    #1 0x7f69b63eaf36 in II_samples (/usr/lib/libmad.so.0+0x30f36)
    #2 0x7f69b63e9307 in mad_layer_II (/usr/lib/libmad.so.0+0x2f307)
    #3 0x7f69b63d06c4 in mad_frame_decode (/usr/lib/libmad.so.0+0x166c4)
    #4 0x7f69b63dee4b in run_sync (/usr/lib/libmad.so.0+0x24e4b)
    #5 0x7f69b63dda9e in mad_decoder_run (/usr/lib/libmad.so.0+0x23a9e)
    #6 0x50e2bd in LLVMFuzzerTestOneInput (/src/libmad-0.15.1b/libmad-fuzzer+0x50e2bd)
    #7 0x4f85f4 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:536:13
    #8 0x4f87e4 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:488:3
    #9 0x4f98ce in fuzzer::Fuzzer::MutateAndTestOne() /src/Fuzzer/FuzzerLoop.cpp:722:30
    #10 0x4f9ae7 in fuzzer::Fuzzer::Loop() /src/Fuzzer/FuzzerLoop.cpp:755:5
    #11 0x4f1ca4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/Fuzzer/FuzzerDriver.cpp:530:3
    #12 0x4ef6f0 in main /src/Fuzzer/FuzzerMain.cpp:20:10
    #13 0x7f69b514782f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x41b258 in _start (/src/libmad-0.15.1b/libmad-fuzzer+0x41b258)

0x616000199483 is located 0 bytes to the right of 515-byte region [0x616000199280,0x616000199483)
allocated by thread T0 here:
    #0 0x4ecad0 in operator new[](unsigned long) (/src/libmad-0.15.1b/libmad-fuzzer+0x4ecad0)
    #1 0x4f8537 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/Fuzzer/FuzzerLoop.cpp:527:23

SUMMARY: AddressSanitizer: heap-buffer-overflow (/usr/lib/libmad.so.0+0x7c2d) in mad_bit_read
Shadow bytes around the buggy address:
  0x0c2c8002b240: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c8002b250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c8002b260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c8002b270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c8002b280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c2c8002b290:[03]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c8002b2a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c8002b2b0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c8002b2c0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c8002b2d0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c8002b2e0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==15984==ABORTING
MS: 5 ShuffleBytes-CopyPart-EraseBytes-InsertRepeatedBytes-CrossOver-; base unit: ed95a64fb628312ccdcf6ab8648ba0ef2a05279d
artifact_prefix='./'; Test unit written to /dev/shm/repro-file
